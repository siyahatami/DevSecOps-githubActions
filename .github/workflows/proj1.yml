name: proj1 for nodejs

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
            # echo "Log level: ${{ github.event.inputs.logLevel }}"




env:
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
  # KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: proj1


jobs:                                            
  release:                                       
    name: Release                                
    runs-on: ubuntu-latest                       
    steps:                                       
      - name: Cancel Previous Runs               
        uses: styfle/cancel-workflow-action@0.4.1
        with:                                    
          access_token: ${{ github.token }} 
      
      # - name: Checkout
      #   id: chackout                        
      #   uses: actions/checkout@v2                       
      #   with:                                           
      #     ref: ${{ github.event.pull_request.head.sha }}
      #     # submodules: recursive
  
      # # - name: my test command
      # #   env:
      # #     AUTHOR_NAME: "siamak"
      # #     # AUTHOR_NAME: ${{ steps.author.outputs.author }}
      # #   run: |
      # #     pwd
      # #     ls -ld .
      # #     ls -l
      # #     echo "the author is: $AUTHOR_NAME"
      




      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '14'
      #     cache: 'npm'
      
      
      # - name: install dependencies
      #   run: |
      #     npm install
      #     npm run test
     
      
      # - name: Login to DockerHub Registry
      #   run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      # - name: Get the version
      #   id: vars
      #   run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})

      # - name: Build the tagged Docker image
      #   run: docker build . -f Dockerfile.prod -t siyahatami/proj1:${{github.run_id}}

      # - name: Push the tagged Docker image
      #   run: docker push siyahatami/proj1:${{github.run_id}}
      




      - name: configuring kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client
          kubectl version --client
          mkdir -p ~/.kube
          echo ${{ secrets.KUBER_CONFIG_base64 }} | base64 --decode > ~/.kube/config
          cat ~/.kube/config
          kubectl cluster-info


# curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.0/bin/linux/amd64/kubectl

